---
- name: Verify required variables
  ansible.builtin.assert:
    that:
      - server_name is defined
    msg: "server_name must be defined"

- name: Printing target server
  ansible.builtin.debug:
    msg: "Target server: {{ server_name }}"

- name: Show DNS configuration
  ansible.builtin.command: cat /etc/resolv.conf
  register: dns_config

- name: Display DNS configuration
  ansible.builtin.debug:
    var: dns_config.stdout_lines

- name: Get container network information
  ansible.builtin.command: hostname -I
  register: network_info

- name: Display container IP address
  ansible.builtin.debug:
    var: network_info.stdout_lines

- name: Test DNS resolution
  ansible.builtin.command: getent hosts example.com
  register: dns_test
  ignore_errors: yes

- name: Display DNS test result
  ansible.builtin.debug:
    var: dns_test

- name: Ping target server
  ansible.builtin.shell: ping -c2 "{{ server_name }}" || echo "Ping failed"
  register: ping_result
  changed_when: false

- name: Display ping result
  ansible.builtin.debug:
    var: ping_result.stdout_lines

- name: Test TCP connection with timeout
  ansible.builtin.shell: timeout 5 bash -c "</dev/tcp/{{ server_name }}/22" && echo "Connection successful" || echo "Connection failed"
  register: tcp_test
  changed_when: false

- name: Display TCP test result
  ansible.builtin.debug:
    var: tcp_test.stdout_lines

- name: Save ping test results as artifacts
  ansible.builtin.set_stats:
    data:
      ping_test_results: "{{ ping_result.stdout_lines | default([]) }}"
    per_host: false

- name: Save pre-migration ping test results
  ansible.builtin.set_fact:
    pre_ping_test_results_var: "{{ ping_result.stdout_lines | default([]) }}"
  when: ping_name == "pre"

- name: Save post-migration ping test results
  ansible.builtin.set_fact:
    post_ping_test_results_var: "{{ ping_result.stdout_lines | default([]) }}"
  when: ping_name == "post"

- name: Summarize network diagnostics
  ansible.builtin.debug:
    msg: |
      Network Diagnostics Summary:
      1. DNS Configuration: {{ 'OK' if dns_config.rc == 0 else 'Failed' }}
      2. Container IP: {{ network_info.stdout }}
      3. DNS Resolution Test: {{ 'OK' if dns_test.rc == 0 else 'Failed' }}
      4. Ping Test: {{ 'OK' if 'bytes from' in ping_result.stdout else 'Failed' }}
      5. TCP Connection Test: {{ 'OK' if 'Connection successful' in tcp_test.stdout else 'Failed' }}

- name: Fail if ping test unsuccessful
  ansible.builtin.fail:
    msg: "Ping test to {{ server_name }} failed. Please check network connectivity and firewall rules."
  when: "'bytes from' not in ping_result.stdout"
